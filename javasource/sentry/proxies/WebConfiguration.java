// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sentry.proxies;

public class WebConfiguration
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject webConfigurationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Sentry.WebConfiguration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Enabled("Enabled"),
		DSN("DSN"),
		Configuration("Configuration"),
		LogLevel("LogLevel");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WebConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Sentry.WebConfiguration"));
	}

	protected WebConfiguration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject webConfigurationMendixObject)
	{
		if (webConfigurationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Sentry.WebConfiguration", webConfigurationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Sentry.WebConfiguration");

		this.webConfigurationMendixObject = webConfigurationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'WebConfiguration.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sentry.proxies.WebConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sentry.proxies.WebConfiguration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sentry.proxies.WebConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sentry.proxies.WebConfiguration(context, mendixObject);
	}

	public static sentry.proxies.WebConfiguration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sentry.proxies.WebConfiguration.initialize(context, mendixObject);
	}

	public static java.util.List<sentry.proxies.WebConfiguration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sentry.proxies.WebConfiguration> result = new java.util.ArrayList<sentry.proxies.WebConfiguration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Sentry.WebConfiguration" + xpathConstraint))
			result.add(sentry.proxies.WebConfiguration.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Enabled
	 */
	public final java.lang.Boolean getEnabled()
	{
		return getEnabled(getContext());
	}

	/**
	 * @param context
	 * @return value of Enabled
	 */
	public final java.lang.Boolean getEnabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Enabled.toString());
	}

	/**
	 * Set value of Enabled
	 * @param enabled
	 */
	public final void setEnabled(java.lang.Boolean enabled)
	{
		setEnabled(getContext(), enabled);
	}

	/**
	 * Set value of Enabled
	 * @param context
	 * @param enabled
	 */
	public final void setEnabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean enabled)
	{
		getMendixObject().setValue(context, MemberNames.Enabled.toString(), enabled);
	}

	/**
	 * @return value of DSN
	 */
	public final java.lang.String getDSN()
	{
		return getDSN(getContext());
	}

	/**
	 * @param context
	 * @return value of DSN
	 */
	public final java.lang.String getDSN(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DSN.toString());
	}

	/**
	 * Set value of DSN
	 * @param dsn
	 */
	public final void setDSN(java.lang.String dsn)
	{
		setDSN(getContext(), dsn);
	}

	/**
	 * Set value of DSN
	 * @param context
	 * @param dsn
	 */
	public final void setDSN(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String dsn)
	{
		getMendixObject().setValue(context, MemberNames.DSN.toString(), dsn);
	}

	/**
	 * @return value of Configuration
	 */
	public final java.lang.String getConfiguration()
	{
		return getConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of Configuration
	 */
	public final java.lang.String getConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Configuration.toString());
	}

	/**
	 * Set value of Configuration
	 * @param configuration
	 */
	public final void setConfiguration(java.lang.String configuration)
	{
		setConfiguration(getContext(), configuration);
	}

	/**
	 * Set value of Configuration
	 * @param context
	 * @param configuration
	 */
	public final void setConfiguration(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String configuration)
	{
		getMendixObject().setValue(context, MemberNames.Configuration.toString(), configuration);
	}

	/**
	 * Set value of LogLevel
	 * @param loglevel
	 */
	public final sentry.proxies.MendixLogLevel getLogLevel()
	{
		return getLogLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of LogLevel
	 */
	public final sentry.proxies.MendixLogLevel getLogLevel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LogLevel.toString());
		if (obj == null)
			return null;

		return sentry.proxies.MendixLogLevel.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LogLevel
	 * @param loglevel
	 */
	public final void setLogLevel(sentry.proxies.MendixLogLevel loglevel)
	{
		setLogLevel(getContext(), loglevel);
	}

	/**
	 * Set value of LogLevel
	 * @param context
	 * @param loglevel
	 */
	public final void setLogLevel(com.mendix.systemwideinterfaces.core.IContext context, sentry.proxies.MendixLogLevel loglevel)
	{
		if (loglevel != null)
			getMendixObject().setValue(context, MemberNames.LogLevel.toString(), loglevel.toString());
		else
			getMendixObject().setValue(context, MemberNames.LogLevel.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return webConfigurationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sentry.proxies.WebConfiguration that = (sentry.proxies.WebConfiguration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Sentry.WebConfiguration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
