// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package sentry.actions;

import java.net.URL;
import com.mendix.core.Core;
import com.mendix.core.conf.Configuration;
import com.mendix.logging.LogLevel;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import io.sentry.Sentry;
import io.sentry.SentryLevel;
import sentry.impl.SentryLogSubscriber;
import sentry.impl.SentryLogger;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class InitializeSentry extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __config;
	private sentry.proxies.RuntimeConfiguration config;

	public InitializeSentry(IContext context, IMendixObject config)
	{
		super(context);
		this.__config = config;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.config = __config == null ? null : sentry.proxies.RuntimeConfiguration.initialize(getContext(), __config);

		// BEGIN USER CODE
		URL url = new URL(Core.getConfiguration().getApplicationRootUrl());
		
		if (!config.getEnabled()) {
			return null;
		}
		
		Sentry.init(options -> {
			options.setEnableExternalConfiguration(false);
			options.setDsn(config.getDSN());
			options.setDebug(config.getDebug());
			options.setServerName(url.getHost());
			options.setRelease(Core.getModelVersion());
			options.setLogger(new SentryLogger());
			options.setEnvironment(config.getEnvironment());
			options.setAttachStacktrace(config.getAttachStacktrace());
			options.setDiagnosticLevel(SentryLevel.valueOf(
					config.getDiagnosticLevel().toString()));
			
			if (config.getSampleRate() != null) {
				options.setSampleRate(config.getSampleRate().doubleValue());
			}
			if (config.getTracesSampleRate() != null) {
				options.setTracesSampleRate(config.getTracesSampleRate().doubleValue());
			}
			
		});
		
		if (System.getenv("CF_INSTANCE_INDEX") != null) {
			Sentry.setTag("instance", System.getenv("CF_INSTANCE_INDEX"));
		}
		
		Core.getConfiguration();
		Sentry.setTag("runtime.version", Configuration.RUNTIME_VERSION.toString());
		
		if (config.getRedirectMendixLog()) {
			Core.registerLogSubscriber(new SentryLogSubscriber(LogLevel.INFO));			
		}
		
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "InitializeSentry";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
