{"version":3,"file":"client.js","sourceRoot":"","sources":["../../src/js/client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAG/C;;;;;GAKG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAGpC;IACD;;;OAGG;IACH,YAAmB,OAA2B;QAC5C,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACI,WAAW;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;CACF","sourcesContent":["import { BaseClient } from \"@sentry/core\";\n\nimport { ReactNativeBackend } from \"./backend\";\nimport { ReactNativeOptions } from \"./options\";\n\n/**\n * The Sentry React Native SDK Client.\n *\n * @see ReactNativeOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class ReactNativeClient extends BaseClient<\n  ReactNativeBackend,\n  ReactNativeOptions\n  > {\n  /**\n   * Creates a new React Native SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: ReactNativeOptions) {\n    super(ReactNativeBackend, options);\n  }\n\n  /**\n   * If native client is available it will trigger a native crash.\n   * Use this only for testing purposes.\n   */\n  public nativeCrash(): void {\n    this._getBackend().nativeCrash();\n  }\n}\n"]}