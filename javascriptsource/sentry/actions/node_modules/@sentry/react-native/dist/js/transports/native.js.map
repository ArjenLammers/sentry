{"version":3,"file":"native.js","sourceRoot":"","sources":["../../../src/js/transports/native.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE3D,2CAA2C;AAC3C,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEpC,4CAA4C;AAC5C,MAAM,OAAO,eAAe;IAA5B;QACE,4CAA4C;QACzB,YAAO,GAA4B,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;IAoB9E,CAAC;IAlBC;;OAEG;IACI,SAAS,CAAC,KAAY;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC3B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,WAAW,CAAC,iDAAiD,CAAC,CACnE,CAAC;SACH;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,OAAgB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACF","sourcesContent":["// import { Transports } from \"@sentry/react\";\nimport { Event, Response, Transport } from \"@sentry/types\";\nimport { PromiseBuffer, SentryError } from \"@sentry/utils\";\n\n// import { Platform } from \"react-native\";\nimport { NATIVE } from \"../wrapper\";\n\n/** Native Transport class implementation */\nexport class NativeTransport implements Transport {\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (!this._buffer.isReady()) {\n      return Promise.reject(\n        new SentryError(\"Not adding Promise due to buffer limit reached.\")\n      );\n    }\n    return this._buffer.add(NATIVE.sendEvent(event));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n"]}