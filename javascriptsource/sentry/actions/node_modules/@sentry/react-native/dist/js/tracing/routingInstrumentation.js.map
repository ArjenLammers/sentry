{"version":3,"file":"routingInstrumentation.js","sourceRoot":"","sources":["../../../src/js/tracing/routingInstrumentation.ts"],"names":[],"mappings":"AA+BA;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IAMjC,kBAAkB;IAClB,8BAA8B,CAC5B,QAA4B,EAC5B,cAA8B;QAE9B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IACxC,CAAC;IAED,kBAAkB;IACX,iBAAiB,CACtB,OAA2B;;QAE3B,aAAO,IAAI,CAAC,gBAAgB,+CAArB,IAAI,EAAoB,OAAO,EAAE;IAC1C,CAAC;CACF","sourcesContent":["import { Hub } from \"@sentry/hub\";\nimport { Transaction, TransactionContext } from \"@sentry/types\";\n\nimport { BeforeNavigate } from \"./reactnativetracing\";\n\nexport type TransactionCreator = (\n  context: TransactionContext\n) => Transaction | undefined;\n\nexport interface RoutingInstrumentationInstance {\n  /**\n   * Registers a listener that's called on every route change with a `TransactionContext`.\n   *\n   * Do not overwrite this unless you know what you are doing.\n   *\n   * @param listener A `RouteListener`\n   * @param beforeNavigate BeforeNavigate\n   */\n  registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate\n  ): void;\n  /**\n   * To be called when the route changes, BEFORE the new route mounts.\n   * If this is called after a route mounts the child spans will not be correctly attached.\n   *\n   * @param context A `TransactionContext` used to initialize the transaction.\n   */\n  onRouteWillChange(context: TransactionContext): Transaction | undefined;\n}\n\n/**\n * Base Routing Instrumentation. Can be used by users to manually instrument custom routers.\n * Pass this to the tracing integration, and call `onRouteWillChange` every time before a route changes.\n */\nexport class RoutingInstrumentation implements RoutingInstrumentationInstance {\n  protected _getCurrentHub?: () => Hub;\n  protected _beforeNavigate?: BeforeNavigate;\n\n  private _tracingListener?: TransactionCreator;\n\n  /** @inheritdoc */\n  registerRoutingInstrumentation(\n    listener: TransactionCreator,\n    beforeNavigate: BeforeNavigate\n  ): void {\n    this._tracingListener = listener;\n    this._beforeNavigate = beforeNavigate;\n  }\n\n  /** @inheritdoc */\n  public onRouteWillChange(\n    context: TransactionContext\n  ): Transaction | undefined {\n    return this._tracingListener?.(context);\n  }\n}\n"]}