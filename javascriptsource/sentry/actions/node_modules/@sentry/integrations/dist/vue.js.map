{"version":3,"file":"vue.js","sourceRoot":"","sources":["../src/vue.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventProcessor, Hub, Integration, IntegrationClass, Scope, Span, Transaction } from '@sentry/types';\nimport { basename, getGlobalObject, logger, timestampWithMs } from '@sentry/utils';\n\n/**\n * Used to extract Tracing integration from the current client,\n * without the need to import `Tracing` itself from the @sentry/apm package.\n * @deprecated as @sentry/tracing should be used over @sentry/apm.\n */\nconst TRACING_GETTER = ({\n  id: 'Tracing',\n} as any) as IntegrationClass<Integration>;\n\n/**\n * Used to extract BrowserTracing integration from @sentry/tracing\n */\nconst BROWSER_TRACING_GETTER = ({\n  id: 'BrowserTracing',\n} as any) as IntegrationClass<Integration>;\n\n/** Global Vue object limited to the methods/attributes we require */\ninterface VueInstance {\n  config: {\n    errorHandler?(error: Error, vm?: ViewModel, info?: string): void;\n  };\n  util?: {\n    warn(...input: any): void;\n  };\n  mixin(hooks: { [key: string]: () => void }): void;\n}\n\n/** Representation of Vue component internals */\ninterface ViewModel {\n  [key: string]: any;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  $root: object;\n  $options: {\n    [key: string]: any;\n    name?: string;\n    propsData?: { [key: string]: any };\n    _componentTag?: string;\n    __file?: string;\n    $_sentryPerfHook?: boolean;\n  };\n  $once(hook: string, cb: () => void): void;\n}\n\n/** Vue Integration configuration */\ninterface IntegrationOptions {\n  /** Vue instance to be used inside the integration */\n  Vue: VueInstance;\n\n  /**\n   * When set to `false`, Sentry will suppress reporting of all props data\n   * from your Vue components for privacy concerns.\n   */\n  attachProps: boolean;\n  /**\n   * When set to `true`, original Vue's `logError` will be called as well.\n   * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n   */\n  logErrors: boolean;\n\n  /**\n   * When set to `true`, enables tracking of components lifecycle performance.\n   * It requires `Tracing` integration to be also enabled.\n   */\n  tracing: boolean;\n\n  /** {@link TracingOptions} */\n  tracingOptions: TracingOptions;\n}\n\n/** Vue specific configuration for Tracing Integration  */\ninterface TracingOptions {\n  /**\n   * Decides whether to track components by hooking into its lifecycle methods.\n   * Can be either set to `boolean` to enable/disable tracking for all of them.\n   * Or to an array of specific component names (case-sensitive).\n   */\n  trackComponents: boolean | string[];\n  /** How long to wait until the tracked root activity is marked as finished and sent of to Sentry */\n  timeout: number;\n  /**\n   * List of hooks to keep track of during component lifecycle.\n   * Available hooks: 'activate' | 'create' | 'destroy' | 'mount' | 'update'\n   * Based on https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n   */\n  hooks: Operation[];\n}\n\n/** Optional metadata attached to Sentry Event */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: { [key: string]: any };\n  lifecycleHook?: string;\n}\n\n// https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\ntype Hook =\n  | 'activated'\n  | 'beforeCreate'\n  | 'beforeDestroy'\n  | 'beforeMount'\n  | 'beforeUpdate'\n  | 'created'\n  | 'deactivated'\n  | 'destroyed'\n  | 'mounted'\n  | 'updated';\n\ntype Operation = 'activate' | 'create' | 'destroy' | 'mount' | 'update';\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\nconst COMPONENT_NAME_REGEXP = /(?:^|[-_/])(\\w)/g;\nconst ROOT_COMPONENT_NAME = 'root';\nconst ANONYMOUS_COMPONENT_NAME = 'anonymous component';\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n\n  private readonly _options: IntegrationOptions;\n\n  /**\n   * Cache holding already processed component names\n   */\n  private readonly _componentsCache: { [key: string]: string } = {};\n  private _rootSpan?: Span;\n  private _rootSpanTimer?: ReturnType<typeof setTimeout>;\n  private _tracingActivity?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    options: Partial<Omit<IntegrationOptions, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }>,\n  ) {\n    logger.log('You are still using the Vue.js integration, consider moving to @sentry/vue');\n    this._options = {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      Vue: getGlobalObject<any>().Vue,\n      attachProps: true,\n      logErrors: false,\n      tracing: false,\n      ...options,\n      tracingOptions: {\n        hooks: ['mount', 'update'],\n        timeout: 2000,\n        trackComponents: false,\n        ...options.tracingOptions,\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._options.Vue) {\n      logger.error('Vue integration is missing a Vue instance');\n      return;\n    }\n\n    this._attachErrorHandler(getCurrentHub);\n\n    if (this._options.tracing) {\n      this._startTracing(getCurrentHub);\n    }\n  }\n\n  /**\n   * Extract component name from the ViewModel\n   */\n  private _getComponentName(vm: ViewModel): string {\n    // Such level of granularity is most likely not necessary, but better safe than sorry. — Kamil\n    if (!vm) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$root === vm) {\n      return ROOT_COMPONENT_NAME;\n    }\n\n    if (!vm.$options) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$options.name) {\n      return vm.$options.name;\n    }\n\n    if (vm.$options._componentTag) {\n      return vm.$options._componentTag;\n    }\n\n    // injected by vue-loader\n    if (vm.$options.__file) {\n      const unifiedFile = vm.$options.__file.replace(/^[a-zA-Z]:/, '').replace(/\\\\/g, '/');\n      const filename = basename(unifiedFile, '.vue');\n      return (\n        this._componentsCache[filename] ||\n        (this._componentsCache[filename] = filename.replace(COMPONENT_NAME_REGEXP, (_, c: string) =>\n          c ? c.toUpperCase() : '',\n        ))\n      );\n    }\n\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  /** Keep it as attribute function, to keep correct `this` binding inside the hooks callbacks  */\n  // eslint-disable-next-line @typescript-eslint/typedef\n  private readonly _applyTracingHooks = (vm: ViewModel, getCurrentHub: () => Hub): void => {\n    // Don't attach twice, just in case\n    if (vm.$options.$_sentryPerfHook) {\n      return;\n    }\n    vm.$options.$_sentryPerfHook = true;\n\n    const name = this._getComponentName(vm);\n    const rootMount = name === ROOT_COMPONENT_NAME;\n    const spans: { [key: string]: Span } = {};\n\n    // Render hook starts after once event is emitted,\n    // but it ends before the second event of the same type.\n    //\n    // Because of this, we start measuring inside the first event,\n    // but finish it before it triggers, to skip the event emitter timing itself.\n    const rootHandler = (hook: Hook): void => {\n      const now = timestampWithMs();\n\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (this._rootSpan) {\n        this._finishRootSpan(now, getCurrentHub);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          // Create an activity on the first event call. There'll be no second call, as rootSpan will be in place,\n          // thus new event handler won't be attached.\n\n          // We do this whole dance with `TRACING_GETTER` to prevent `@sentry/apm` from becoming a peerDependency.\n          // We also need to ask for the `.constructor`, as `pushActivity` and `popActivity` are static, not instance methods.\n          /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n          // eslint-disable-next-line deprecation/deprecation\n          const tracingIntegration = getCurrentHub().getIntegration(TRACING_GETTER);\n          if (tracingIntegration) {\n            this._tracingActivity = (tracingIntegration as any).constructor.pushActivity('Vue Application Render');\n            const transaction = (tracingIntegration as any).constructor.getTransaction();\n            if (transaction) {\n              this._rootSpan = transaction.startChild({\n                description: 'Application Render',\n                op: 'Vue',\n              });\n            }\n            // Use functionality from @sentry/tracing\n          } else {\n            const activeTransaction = getActiveTransaction(getCurrentHub());\n            if (activeTransaction) {\n              this._rootSpan = activeTransaction.startChild({\n                description: 'Application Render',\n                op: 'Vue',\n              });\n            }\n          }\n          /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n        });\n      }\n    };\n\n    const childHandler = (hook: Hook, operation: Operation): void => {\n      // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n      const shouldTrack = Array.isArray(this._options.tracingOptions.trackComponents)\n        ? this._options.tracingOptions.trackComponents.indexOf(name) > -1\n        : this._options.tracingOptions.trackComponents;\n\n      if (!this._rootSpan || !shouldTrack) {\n        return;\n      }\n\n      const now = timestampWithMs();\n      const span = spans[operation];\n\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (span) {\n        span.finish();\n        this._finishRootSpan(now, getCurrentHub);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          if (this._rootSpan) {\n            spans[operation] = this._rootSpan.startChild({\n              description: `Vue <${name}>`,\n              op: operation,\n            });\n          }\n        });\n      }\n    };\n\n    // Each component has it's own scope, so all activities are only related to one of them\n    this._options.tracingOptions.hooks.forEach(operation => {\n      // Retrieve corresponding hooks from Vue lifecycle.\n      // eg. mount => ['beforeMount', 'mounted']\n      const internalHooks = HOOKS[operation];\n\n      if (!internalHooks) {\n        logger.warn(`Unknown hook: ${operation}`);\n        return;\n      }\n\n      internalHooks.forEach(internalHook => {\n        const handler = rootMount\n          ? rootHandler.bind(this, internalHook)\n          : childHandler.bind(this, internalHook, operation);\n        const currentValue = vm.$options[internalHook];\n\n        if (Array.isArray(currentValue)) {\n          vm.$options[internalHook] = [handler, ...currentValue];\n        } else if (typeof currentValue === 'function') {\n          vm.$options[internalHook] = [handler, currentValue];\n        } else {\n          vm.$options[internalHook] = [handler];\n        }\n      });\n    });\n  };\n\n  /** Finish top-level span and activity with a debounce configured using `timeout` option */\n  private _finishRootSpan(timestamp: number, getCurrentHub: () => Hub): void {\n    if (this._rootSpanTimer) {\n      clearTimeout(this._rootSpanTimer);\n    }\n\n    this._rootSpanTimer = setTimeout(() => {\n      if (this._tracingActivity) {\n        // We do this whole dance with `TRACING_GETTER` to prevent `@sentry/apm` from becoming a peerDependency.\n        // We also need to ask for the `.constructor`, as `pushActivity` and `popActivity` are static, not instance methods.\n        // eslint-disable-next-line deprecation/deprecation\n        const tracingIntegration = getCurrentHub().getIntegration(TRACING_GETTER);\n        if (tracingIntegration) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          (tracingIntegration as any).constructor.popActivity(this._tracingActivity);\n        }\n      }\n\n      // We should always finish the span, only should pop activity if using @sentry/apm\n      if (this._rootSpan) {\n        this._rootSpan.finish(timestamp);\n      }\n    }, this._options.tracingOptions.timeout);\n  }\n\n  /** Inject configured tracing hooks into Vue's component lifecycles */\n  private _startTracing(getCurrentHub: () => Hub): void {\n    const applyTracingHooks = this._applyTracingHooks;\n\n    this._options.Vue.mixin({\n      beforeCreate(this: ViewModel): void {\n        // eslint-disable-next-line deprecation/deprecation\n        if (getCurrentHub().getIntegration(TRACING_GETTER) || getCurrentHub().getIntegration(BROWSER_TRACING_GETTER)) {\n          // `this` points to currently rendered component\n          applyTracingHooks(this, getCurrentHub);\n        } else {\n          logger.error('Vue integration has tracing enabled, but Tracing integration is not configured');\n        }\n      },\n    });\n  }\n\n  /** Inject Sentry's handler into owns Vue's error handler  */\n  private _attachErrorHandler(getCurrentHub: () => Hub): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const currentErrorHandler = this._options.Vue.config.errorHandler;\n\n    this._options.Vue.config.errorHandler = (error: Error, vm?: ViewModel, info?: string): void => {\n      const metadata: Metadata = {};\n\n      if (vm) {\n        try {\n          metadata.componentName = this._getComponentName(vm);\n\n          if (this._options.attachProps) {\n            metadata.propsData = vm.$options.propsData;\n          }\n        } catch (_oO) {\n          logger.warn('Unable to extract metadata from Vue component.');\n        }\n      }\n\n      if (info) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof currentErrorHandler === 'function') {\n        currentErrorHandler.call(this._options.Vue, error, vm, info);\n      }\n\n      if (this._options.logErrors) {\n        if (this._options.Vue.util) {\n          this._options.Vue.util.warn(`Error in ${info}: \"${error && error.toString()}\"`, vm);\n        }\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    };\n  }\n}\n\ninterface HubType extends Hub {\n  getScope?(): Scope | undefined;\n}\n\n/** Grabs active transaction off scope */\nexport function getActiveTransaction<T extends Transaction>(hub: HubType): T | undefined {\n  if (hub && hub.getScope) {\n    const scope = hub.getScope() as Scope;\n    if (scope) {\n      return scope.getTransaction() as T | undefined;\n    }\n  }\n\n  return undefined;\n}\n"]}