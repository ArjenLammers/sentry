{"version":3,"file":"captureconsole.js","sourceRoot":"","sources":["../src/captureconsole.ts"],"names":[],"mappings":"AAAA,OAAO,EAAoC,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC3E,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEhE,IAAM,MAAM,GAAG,eAAe,EAA0B,CAAC;AAEzD,8CAA8C;AAC9C;IAgBE;;OAEG;IACH,wBAAmB,OAAmC;QAAnC,wBAAA,EAAA,YAAmC;QAbtD;;WAEG;QACI,SAAI,GAAW,cAAc,CAAC,EAAE,CAAC;QAExC;;WAEG;QACc,YAAO,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAMvF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;SAC/B;IACH,CAAC;IAED;;OAEG;IACI,kCAAS,GAAhB,UAAiB,CAAqC,EAAE,aAAwB;QAC9E,IAAI,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAa;YACjC,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;gBAC9B,OAAO;aACR;YAED,8DAA8D;YAC9D,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,UAAC,oBAA+B,IAAK,OAAA;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC9E,IAAM,GAAG,GAAG,aAAa,EAAE,CAAC;gBAE5B,IAAI,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;oBACtC,GAAG,CAAC,SAAS,CAAC,UAAA,KAAK;wBACjB,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3C,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;wBAClC,KAAK,CAAC,iBAAiB,CAAC,UAAA,KAAK;4BAC3B,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;4BACzB,OAAO,KAAK,CAAC;wBACf,CAAC,CAAC,CAAC;wBAEH,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;wBAClC,IAAI,KAAK,KAAK,QAAQ,EAAE;4BACtB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;gCACrB,OAAO,GAAG,wBAAqB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,gBAAgB,CAAE,CAAC;gCAClF,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC3C,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;6BAC7B;yBACF;6BAAM;4BACL,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;yBAC7B;oBACH,CAAC,CAAC,CAAC;iBACJ;gBAED,mCAAmC;gBACnC,IAAI,oBAAoB,EAAE;oBACxB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBAC3E;YACH,CAAC,EA7BgE,CA6BhE,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IArED;;OAEG;IACW,iBAAE,GAAW,gBAAgB,CAAC;IAmE9C,qBAAC;CAAA,AAvED,IAuEC;SAvEY,cAAc","sourcesContent":["import { EventProcessor, Hub, Integration, Severity } from '@sentry/types';\nimport { fill, getGlobalObject, safeJoin } from '@sentry/utils';\n\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Send Console API calls as Sentry Events */\nexport class CaptureConsole implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'CaptureConsole';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = CaptureConsole.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _levels: string[] = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { levels?: string[] } = {}) {\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!('console' in global)) {\n      return;\n    }\n\n    this._levels.forEach((level: string) => {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fill(global.console, level, (originalConsoleLevel: () => any) => (...args: any[]): void => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel(Severity.fromString(level));\n            scope.setExtra('arguments', args);\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = safeJoin(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', args.slice(1));\n                hub.captureMessage(message);\n              }\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      });\n    });\n  }\n}\n"]}