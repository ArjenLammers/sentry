{"version":3,"file":"sessiontiming.js","sources":["../src/sessiontiming.ts"],"sourcesContent":["import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;IACA;;;;QASS,SAAI,GAAW,aAAa,CAAC,EAAE,CAAC;;QAGpB,eAAU,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;KA+BpD;;;;IA1BQ,iCAAS,GAAhB,UAAiB,uBAA2D,EAAE,aAAwB;QACpG,uBAAuB,CAAC,UAAA,KAAK;YAC3B,IAAM,IAAI,GAAG,aAAa,EAAE,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC5B;YACD,OAAO,KAAK,CAAC;SACd,CAAC,CAAC;KACJ;;;;IAKM,+BAAO,GAAd,UAAe,KAAY;;QACzB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvB,6BACK,KAAK,KACR,KAAK,wBACA,KAAK,CAAC,KAAK,gBACb,eAAe,IAAG,IAAI,CAAC,UAAU,KACjC,kBAAkB,IAAG,GAAG,GAAG,IAAI,CAAC,UAAU,KAC1C,aAAa,IAAG,GAAG,UAEtB;KACH;;;;IAtCa,gBAAE,GAAW,eAAe,CAAC;IAuC7C,oBAAC;CA3CD;;;;;;;;;;;;;;;;;;;"}