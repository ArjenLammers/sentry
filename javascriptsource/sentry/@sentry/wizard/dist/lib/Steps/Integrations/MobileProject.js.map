{"version":3,"file":"MobileProject.js","sourceRoot":"","sources":["../../../../lib/Steps/Integrations/MobileProject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA2C;AAC3C,0BAA4B;AAC5B,6BAA+B;AAC/B,6CAA+D;AAC/D,gDAA2C;AAC3C,qDAAoD;AAEpD;IAA4C,iCAAe;IAA3D;;IAkDA,CAAC;IA/CQ,oCAAY,GAAnB,UAAoB,OAAgB;QAClC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAE;YAC/C,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACzC;QACD,IAAM,wBAAwB,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QAC5E,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,EAAE,UAAC,MAAe,IAAK,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC,CAAC;IACjF,CAAC;IAEY,uCAAe,GAA5B,UAA6B,OAAgB;;;;;;;wBAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAE;4BAC9C,sBAAO,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAC;yBACnD;wBACK,aAAa,GACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAEjF,KAAA,IAAI,CAAA;6BAAa,aAAa,EAAb,wBAAa;wBAC1B,KAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA;;4BACjB,qBAAM,IAAI,CAAC,gBAAgB,EAAE,EAAA;;wBAA9B,KAAA,CAAC,SAA6B,CAAC,CAAC,QAAQ,CAAA;;;wBAF5C,GAAK,SAAS,KAE8B,CAAC;wBAEvC,wBAAwB,GAAQ,EAAE,CAAC;wBACzC,CAAC,CAAC,IAAI,CAAC,oBAAQ,CAAC,CAAC,OAAO,CAAC,UAAO,QAAkB;;;;;wCAChD,KAAA,wBAAwB,CAAA;wCAAC,KAAA,QAAQ,CAAA;6CAC/B,CAAA,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAxC,wBAAwC;wCACpC,qBAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,EAAA;;wCAA5C,KAAA,SAA4C,CAAA;;;wCAC5C,KAAA,KAAK,CAAA;;;wCAHX,MAAkC,KAGvB,CAAC;wCACZ,IAAI,wBAAwB,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;4CACjF,aAAG,CAAC,wBAAsB,QAAU,CAAC,CAAC;yCACvC;;;;6BACF,CAAC,CAAC;wBACH,sBAAO,EAAE,wBAAwB,0BAAA,EAAE,EAAC;;;;KACrC;IAIS,wCAAgB,GAA1B;QACE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;QACD,OAAO,iBAAM,CAAC;YACZ;gBACE,OAAO,EAAE,8BAAkB,EAAE;gBAC7B,OAAO,EAAE,0CAA0C;gBACnD,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC,AAlDD,CAA4C,iCAAe,GAkD1D;AAlDqB,sCAAa","sourcesContent":["import { Answers, prompt } from 'inquirer';\nimport * as _ from 'lodash';\nimport { isArray } from 'util';\nimport { getPlatformChoices, Platform } from '../../Constants';\nimport { dim } from '../../Helper/Logging';\nimport { BaseIntegration } from './BaseIntegration';\n\nexport abstract class MobileProject extends BaseIntegration {\n  protected platforms: Platform[];\n\n  public getPlatforms(answers: Answers): string[] {\n    if (!_.has(answers, 'shouldConfigurePlatforms')) {\n      throw new Error('No platform selected');\n    }\n    const shouldConfigurePlatforms = _.get(answers, 'shouldConfigurePlatforms');\n    return _.keys(_.pickBy(shouldConfigurePlatforms, (active: boolean) => active));\n  }\n\n  public async shouldConfigure(answers: Answers): Promise<Answers> {\n    if (_.get(answers, 'shouldConfigurePlatforms')) {\n      return _.get(answers, 'shouldConfigurePlatforms');\n    }\n    const isPlatformSet =\n      this.argv.platform && isArray(this.argv.platform) && this.argv.platform.length;\n\n    this.platforms = isPlatformSet\n      ? this.argv.platform\n      : (await this.platformSelector()).platform;\n\n    const shouldConfigurePlatforms: any = {};\n    _.keys(Platform).forEach(async (platform: Platform) => {\n      shouldConfigurePlatforms[platform] =\n        _.indexOf(this.platforms, platform) >= 0\n          ? await this.shouldConfigurePlatform(platform)\n          : false;\n      if (shouldConfigurePlatforms[platform] === false && this.argv.uninstall === false) {\n        dim(`will not configure ${platform}`);\n      }\n    });\n    return { shouldConfigurePlatforms };\n  }\n\n  protected abstract shouldConfigurePlatform(platform: Platform): Promise<boolean>;\n\n  protected platformSelector(): Promise<Answers> {\n    if (this.argv.quiet) {\n      throw new Error('You need to choose a platform');\n    }\n    return prompt([\n      {\n        choices: getPlatformChoices(),\n        message: 'Select the platforms you like to set up:',\n        name: 'platform',\n        type: 'checkbox',\n      },\n    ]);\n  }\n}\n"]}