{"version":3,"file":"BaseStep.js","sourceRoot":"","sources":["../../../lib/Steps/BaseStep.ts"],"names":[],"mappings":";;AAEA,6CAA8C;AAE9C;IAEE,kBAAsB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QADtB,YAAO,GAAY,KAAK,CAAC;QAEjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAEM,wBAAK,GAAZ,UAAa,GAAQ;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,YAAE,EAAE,CAAC;YACL,eAAK,CAAC,GAAG,CAAC,CAAC;YACX,YAAE,EAAE,CAAC;SACN;IACH,CAAC;IACH,eAAC;AAAD,CAAC,AAbD,IAaC;AAbqB,4BAAQ","sourcesContent":["import { Answers } from 'inquirer';\nimport { Args } from '../Constants';\nimport { debug, nl } from '../Helper/Logging';\n\nexport abstract class BaseStep implements IStep {\n  protected isDebug: boolean = false;\n  constructor(protected argv: Args) {\n    this.isDebug = argv.debug;\n  }\n  public abstract emit(answers: Answers): Promise<Answers>;\n  public debug(msg: any): void {\n    if (this.isDebug) {\n      nl();\n      debug(msg);\n      nl();\n    }\n  }\n}\n\nexport interface IStep {\n  emit(answers?: Answers): Promise<Answers>;\n}\n"]}