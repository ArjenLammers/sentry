{"version":3,"file":"wrapper.js","sourceRoot":"","sources":["../../src/js/wrapper.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\nimport { Breadcrumb, Event, Response, Severity, User } from \"@sentry/types\";\nimport { logger, SentryError } from \"@sentry/utils\";\nimport { NativeModules, Platform } from \"react-native\";\n\nimport { ReactNativeOptions } from \"./options\";\n\nconst { RNSentry } = NativeModules;\n\n/**\n * Our internal interface for calling native functions\n */\nexport const NATIVE = {\n  /**\n   * Sending the event over the bridge to native\n   * @param event Event\n   */\n  async sendEvent(event: Event): Promise<Response> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // Process and convert deprecated levels\n    event.level = event.level ? this._processLevel(event.level) : undefined;\n\n    const header = {\n      event_id: event.event_id,\n      sdk: event.sdk,\n    };\n\n    const payload = {\n      ...event,\n      type: event.type ?? 'event',\n      message: {\n        message: event.message,\n      },\n    };\n\n    if (NATIVE.platform === \"android\") {\n      const headerString = JSON.stringify(header);\n\n      const payloadString = JSON.stringify(payload);\n      let length = payloadString.length;\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        length = await RNSentry.getStringBytesLength(payloadString);\n      } catch {\n        // The native call failed, we do nothing, we have payload.length as a fallback\n      }\n\n      const item = {\n        content_type: \"application/json\",\n        length,\n        type: payload.type,\n      };\n\n      const itemString = JSON.stringify(item);\n\n      const envelopeString = `${headerString}\\n${itemString}\\n${payloadString}`;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return RNSentry.captureEnvelope(envelopeString);\n    }\n\n    // Serialize and remove any instances that will crash the native bridge such as Spans\n    const serializedPayload = JSON.parse(JSON.stringify(payload));\n\n    // The envelope item is created (and its length determined) on the iOS side of the native bridge.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return RNSentry.captureEnvelope({\n      header,\n      payload: serializedPayload,\n    });\n  },\n\n  /**\n   * Starts native with the provided options.\n   * @param options ReactNativeOptions\n   */\n  async startWithOptions(\n    options: ReactNativeOptions = { enableNative: true }\n  ): Promise<boolean> {\n    if (!options.dsn) {\n      logger.warn(\n        \"Warning: No DSN was provided. The Sentry SDK will be disabled. Native SDK will also not be initalized.\"\n      );\n      return false;\n    }\n    if (!options.enableNative) {\n      if (options.enableNativeNagger) {\n        logger.warn(\"Note: Native Sentry SDK is disabled.\");\n      }\n      this.enableNative = false;\n      return false;\n    }\n\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // filter out all the options that would crash native.\n    /* eslint-disable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n    const {\n      beforeSend,\n      beforeBreadcrumb,\n      integrations,\n      defaultIntegrations,\n      transport,\n      ...filteredOptions\n    } = options;\n    /* eslint-enable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return RNSentry.startWithOptions(filteredOptions);\n  },\n\n  /**\n   * Fetches the release from native\n   */\n  async fetchRelease(): Promise<{\n    build: string;\n    id: string;\n    version: string;\n  }> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return RNSentry.fetchRelease();\n  },\n\n  /**\n   * Fetches the device contexts. Not used on Android.\n   */\n  async deviceContexts(): Promise<{ [key: string]: Record<string, unknown> }> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    if (this.platform !== \"ios\") {\n      // Only ios uses deviceContexts, return an empty object.\n      return {};\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return RNSentry.deviceContexts();\n  },\n\n  /**\n   * Sets log level in native\n   * @param level number\n   */\n  setLogLevel(level: number): void {\n    if (!this.enableNative) {\n      return;\n    }\n\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.setLogLevel(level);\n  },\n\n  /**\n   * Triggers a native crash.\n   * Use this only for testing purposes.\n   */\n  crash(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.crash();\n  },\n\n  /**\n   * Sets the user in the native scope.\n   * Passing null clears the user.\n   * @param key string\n   * @param value string\n   */\n  setUser(user: User | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // separate and serialze all non-default user keys.\n    let defaultUserKeys = null;\n    let otherUserKeys = null;\n    if (user) {\n      const { id, ip_address, email, username, ...otherKeys } = user;\n      defaultUserKeys = this._serializeObject({\n        email,\n        id,\n        ip_address,\n        username,\n      });\n      otherUserKeys = this._serializeObject(otherKeys);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.setUser(defaultUserKeys, otherUserKeys);\n  },\n\n  /**\n   * Sets a tag in the native module.\n   * @param key string\n   * @param value string\n   */\n  setTag(key: string, value: string): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    const stringifiedValue =\n      typeof value === \"string\" ? value : JSON.stringify(value);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.setTag(key, stringifiedValue);\n  },\n\n  /**\n   * Sets an extra in the native scope, will stringify\n   * extra value if it isn't already a string.\n   * @param key string\n   * @param extra any\n   */\n  setExtra(key: string, extra: unknown): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // we stringify the extra as native only takes in strings.\n    const stringifiedExtra =\n      typeof extra === \"string\" ? extra : JSON.stringify(extra);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.setExtra(key, stringifiedExtra);\n  },\n\n  /**\n   * Adds breadcrumb to the native scope.\n   * @param breadcrumb Breadcrumb\n   */\n  addBreadcrumb(breadcrumb: Breadcrumb): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.addBreadcrumb({\n      ...breadcrumb,\n      // Process and convert deprecated levels\n      level: breadcrumb.level\n        ? this._processLevel(breadcrumb.level)\n        : undefined,\n      data: breadcrumb.data\n        ? this._serializeObject(breadcrumb.data)\n        : undefined,\n    });\n  },\n\n  /**\n   * Clears breadcrumbs on the native scope.\n   */\n  clearBreadcrumbs(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    RNSentry.clearBreadcrumbs();\n  },\n\n  /**\n   * Sets context on the native scope. Not implemented in Android yet.\n   * @param key string\n   * @param context key-value map\n   */\n  setContext(key: string, context: { [key: string]: unknown } | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this.isNativeClientAvailable()) {\n      throw this._NativeClientError;\n    }\n\n    if (this.platform === \"android\") {\n      // setContext not available on the Android SDK yet.\n      this.setExtra(key, context);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      RNSentry.setContext(\n        key,\n        context !== null ? this._serializeObject(context) : null\n      );\n    }\n  },\n\n  /**\n   * Serializes all values of root-level keys into strings.\n   * @param data key-value map.\n   * @returns An object where all root-level values are strings.\n   */\n  _serializeObject(data: {\n    [key: string]: unknown;\n  }): { [key: string]: string } {\n    const serialized: { [key: string]: string } = {};\n\n    Object.keys(data).forEach((dataKey) => {\n      const value = data[dataKey];\n      serialized[dataKey] =\n        typeof value === \"string\" ? value : JSON.stringify(value);\n    });\n\n    return serialized;\n  },\n\n  /**\n   * Convert js severity level which has critical and log to more widely supported levels.\n   * @param level\n   * @returns More widely supported Severity level strings\n   */\n  _processLevel(level: Severity): Severity {\n    if (level === Severity.Critical) {\n      return Severity.Fatal;\n    }\n    if (level === Severity.Log) {\n      return Severity.Debug;\n    }\n\n    return level;\n  },\n\n  /**\n   * Checks whether the RNSentry module is loaded.\n   */\n  isModuleLoaded(): boolean {\n    return !!RNSentry;\n  },\n\n  /**\n   *  Checks whether the RNSentry module is loaded and the native client is available\n   */\n  isNativeClientAvailable(): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return this.isModuleLoaded() && RNSentry.nativeClientAvailable;\n  },\n\n  /**\n   *  Checks whether the RNSentry module is loaded and native transport is available\n   */\n  isNativeTransportAvailable(): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return this.isModuleLoaded() && RNSentry.nativeTransport;\n  },\n\n  _DisabledNativeError: new SentryError(\"Native is disabled\"),\n\n  _NativeClientError: new SentryError(\n    \"Native Client is not available, can't start on native.\"\n  ),\n\n  enableNative: true,\n  platform: Platform.OS,\n};\n"]}